{"filter":false,"title":"decorators.py","tooltip":"/posts/posts/decorators.py","undoManager":{"mark":15,"position":15,"stack":[[{"start":{"row":5,"column":0},"end":{"row":19,"column":20},"action":"insert","lines":["def accept(mimetype):","    def decorator(func):","        \"\"\"","        Decorator which returns a 406 Not Acceptable if the client won't accept","        a certain mimetype","        \"\"\"","        @wraps(func)","        def wrapper(*args, **kwargs):","            if mimetype in request.accept_mimetypes:","                return func(*args, **kwargs)","            message = \"Request must accept {} data\".format(mimetype)","            data = json.dumps({\"message\": message})","            return Response(data, 406, mimetype=\"application/json\")","        return wrapper","    return decorator"],"id":2}],[{"start":{"row":14,"column":44},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":15,"column":0},"end":{"row":15,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":15,"column":12},"end":{"row":15,"column":16},"action":"remove","lines":["    "],"id":4}],[{"start":{"row":15,"column":12},"end":{"row":15,"column":13},"action":"insert","lines":["e"],"id":5}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":14},"action":"insert","lines":["l"],"id":6}],[{"start":{"row":15,"column":14},"end":{"row":15,"column":15},"action":"insert","lines":["s"],"id":7}],[{"start":{"row":15,"column":15},"end":{"row":15,"column":16},"action":"insert","lines":["e"],"id":8}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"insert","lines":[":"],"id":9}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "],"id":10},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":20,"column":20},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":21,"column":4},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"remove","lines":["    "],"id":13}],[{"start":{"row":21,"column":4},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":14}],[{"start":{"row":21,"column":4},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"remove","lines":["    "],"id":16}],[{"start":{"row":22,"column":0},"end":{"row":36,"column":20},"action":"insert","lines":["def require(mimetype):","    def decorator(func):","        \"\"\"","        Decorator which returns a 415 Unsupported Media Type if the client sends","        something other than a certain mimetype","        \"\"\"","        @wraps(func)","        def wrapper(*args, **kwargs):","            if (request.mimetype ==  mimetype):","                return func(*args, **kwargs)","            message = \"Request must contain {} data\".format(mimetype)","            data = json.dumps({\"message\": message})","            return Response(data, 415, mimetype=\"application/json\")","        return wrapper","    return decorator"],"id":17}]]},"ace":{"folds":[],"scrolltop":60,"scrollleft":0,"selection":{"start":{"row":36,"column":20},"end":{"row":36,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1450223553335,"hash":"2dbbc2ad1897ca674179870e91c461ddf823e9b8"}